#!/usr/bin/env php
<?php

declare(strict_types = 1);

use Amp\Loop;
use ServiceBus\Application\ServiceBusKernel;
use ServiceBus\Transport\Amqp\AmqpExchange;
use ServiceBus\Transport\Amqp\AmqpQueue;
use ServiceBus\Transport\Common\QueueBind;
use ServiceBus\Transport\Module\PhpInnacleTransportModule;
use ServiceBus\Application\DependencyInjection\Compiler\Logger\StdOutLoggerCompilerPass;

/** Use https://github.com/vishnubob/wait-for-it/blob/master/wait-for-it.sh instead sleep() function for RabbitMQ */
\sleep(8);

include __DIR__ . '/../vendor/autoload.php';

/** @noinspection PhpUnhandledExceptionInspection */
$bootstrap = \ServiceBus\Application\Bootstrap::withDotEnv(__DIR__ . '/../.env')
    ->useCustomCacheDirectory(__DIR__ . '/../cache')
    ->addCompilerPasses(new StdOutLoggerCompilerPass())
    ->addExtensions(new \AppExtension())
    ->importParameters(['app.log_level' => (string) \getenv('LOG_LEVEL')])
    ->enableAutoImportMessageHandlers([__DIR__ . '/../src'])
    ->applyModules(
        new PhpInnacleTransportModule(
            (string) \getenv('TRANSPORT_CONNECTION_DSN'),
            (string) \getenv('SENDER_DESTINATION_TOPIC'),
            (string) \getenv('SENDER_DESTINATION_TOPIC_ROUTING_KEY')
        )
    );

/** @noinspection PhpUnhandledExceptionInspection */
$container = $bootstrap->boot();

Loop::run(
    static function() use ($container): \Generator
    {
        $mainExchange = AmqpExchange::direct((string) \getenv('TRANSPORT_TOPIC'), true);
        $mainQueue    = AmqpQueue::default((string) \getenv('TRANSPORT_QUEUE'), true);

        $kernel = (new ServiceBusKernel($container))
            ->useDefaultStopSignalHandler(3);

        yield $kernel->createQueue(
            $mainQueue,
            QueueBind::create($mainExchange, (string) \getenv('TRANSPORT_ROUTING_KEY'))
        );

        yield $kernel->run($mainQueue);
    }
);
