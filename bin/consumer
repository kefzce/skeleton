#!/usr/bin/env php
<?php

declare(strict_types = 1);

use Amp\Loop;
use ServiceBus\Application\ServiceBusKernel;
use ServiceBus\Transport\Amqp\PhpInnacle\PhpInnacleTransport;
use ServiceBus\Transport\Amqp\AmqpConnectionConfiguration;
use ServiceBus\Transport\Amqp\AmqpQoSConfiguration;
use ServiceBus\Transport\Amqp\AmqpExchange;
use ServiceBus\Transport\Amqp\AmqpQueue;

/** Use https://github.com/vishnubob/wait-for-it/blob/master/wait-for-it.sh instead sleep() function for RabbitMQ */
\sleep(8);

include __DIR__ . '/../vendor/autoload.php';

/** @var \Symfony\Component\DependencyInjection\Container $container */
$container = \ServiceBus\Application\Bootstrap::withDotEnv(__DIR__ . '/../.env')
    ->useCustomCacheDirectory(__DIR__ . '/../cache')
    ->addExtensions(new \AppExtension())
    ->importParameters(['app.log_level' => (string) \getenv('LOG_LEVEL')])
    ->enableAutoImportMessageHandlers([__DIR__ . '/../src'])
    ->boot();

Loop::run(
    static function() use ($container): \Generator
    {
        $transport = new PhpInnacleTransport(
            new AmqpConnectionConfiguration((string) \getenv('TRANSPORT_CONNECTION_DSN')),
            new AmqpQoSConfiguration()
        );

        $mainExchange = AmqpExchange::direct((string) \getenv('TRANSPORT_TOPIC'), true);
        $mainQueue    = AmqpQueue::default((string) \getenv('TRANSPORT_QUEUE'), true);

        $kernel = new ServiceBusKernel($transport, $container);
        $kernel->useDefaultStopSignalHandler(3);

        yield $kernel->run($mainQueue);
    }
);
